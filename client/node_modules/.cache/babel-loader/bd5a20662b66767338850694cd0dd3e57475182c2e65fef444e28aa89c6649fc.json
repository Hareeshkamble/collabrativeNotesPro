{"ast":null,"code":"var _jsxFileName = \"/Users/hareeshkamble/Desktop/proNotes/collabrativeNotesPro/client/src/Context/Notes/NoteState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Notecontext from \"./NoteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NoteState(props) {\n  _s();\n  let host = \"http://localhost\";\n  const initialNotes = [];\n  const [notes, setnotes] = useState(initialNotes);\n\n  // get all notes\n  const getNotes = async () => {\n    // apicall\n    const response = await fetch(`${host}/api/notes/fetchnotes`, {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\"\n    });\n    const json = await response.json();\n    console.log(json);\n    setnotes(json);\n  };\n\n  // ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note\n  const addNote = async (title, description, tag) => {\n    // apicall\n    const response = await fetch(`${host}/api/notes/addnotes`, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const data = await response.json();\n    setnotes(notes.concat(data));\n  };\n\n  // Delete Note// Delete Note// Delete Note// Delete Note// Delete Note// Delete Note// Delete Note\n  const DeleteNote = async id => {\n    console.log(\"deleting the note\" + id);\n    // Api call\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\"\n    });\n    // const json=response.json();\n    const newnotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setnotes(newnotes);\n  };\n\n  // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note\n  const EditNote = async (title, description, tag, id) => {\n    // API CALL\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    let newNotes = JSON.parse(JSON.stringify(notes));\n\n    // logic to edit in client\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n    setnotes(newNotes);\n    setTimeout(() => {\n      window.location.reload();\n    }, 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(Notecontext.Provider, {\n    value: {\n      notes,\n      setnotes,\n      addNote,\n      DeleteNote,\n      EditNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(NoteState, \"2jD90i0tfOyr+0ogurFHwYTgUWY=\");\n_c = NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","Notecontext","jsxDEV","_jsxDEV","NoteState","props","_s","host","initialNotes","notes","setnotes","getNotes","response","fetch","method","mode","cache","credentials","headers","localStorage","getItem","redirect","referrerPolicy","json","console","log","addNote","title","description","tag","body","JSON","stringify","data","concat","DeleteNote","id","newnotes","filter","note","_id","EditNote","newNotes","parse","index","length","element","setTimeout","window","location","reload","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hareeshkamble/Desktop/proNotes/collabrativeNotesPro/client/src/Context/Notes/NoteState.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Notecontext from \"./NoteContext\";\n\n\nexport default function NoteState(props) {\n\n  let host = \"http://localhost\";\n  const initialNotes=[]\n  const [notes, setnotes] = useState(initialNotes);\n\n\n  // get all notes\n  const getNotes = async() => {\n    // apicall\n    const response = await fetch(`${host}/api/notes/fetchnotes`,{\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\":localStorage.getItem(\"token\")\n      },  \n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n    });\n    const json = await response.json()\n    console.log(json)\n    setnotes(json)\n  };\n\n  // ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note// ADD note\n  const addNote = async(title,description,tag) => {\n    // apicall\n    const response = await fetch(`${host}/api/notes/addnotes`,{\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\":localStorage.getItem(\"token\"),\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body:JSON.stringify({title,description,tag }),\n    });\n    const data= await response.json()\n    setnotes(notes.concat(data));\n  };\n\n\n  // Delete Note// Delete Note// Delete Note// Delete Note// Delete Note// Delete Note// Delete Note\n  const DeleteNote = async (id) => {\n    console.log(\"deleting the note\"+ id)\n    // Api call\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\":localStorage.getItem(\"token\"),\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n    });\n    // const json=response.json();\n    const newnotes=notes.filter((note)=>{return note._id !==id })\n    setnotes(newnotes)\n  };\n\n  // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note // Edit Note\n  const EditNote = async (title,description,tag,id) => {\n    // API CALL\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\":localStorage.getItem(\"token\")\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify({ title, description, tag }),\n    });\n\n    const json = await response.json();\n    console.log(json)\n\n    let newNotes=JSON.parse(JSON.stringify(notes))\n\n    // logic to edit in client\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n     }\n    }\n    setnotes(newNotes);\n    setTimeout(() => {\n      window.location.reload()\n    }, 3000);\n  };\n\n\n\n\n  return (\n    <Notecontext.Provider\n      value={{ notes, setnotes, addNote, DeleteNote, EditNote,getNotes}}>\n      {props.children}\n    </Notecontext.Provider>\n  );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}